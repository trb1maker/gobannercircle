services:

  db:
    image: postgres:alpine
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=app
    networks:
      - bannercircle
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 15s

  zookeeper:
    image: zookeeper:latest
    networks:
      - bannercircle
    ports:
      - 2181:2181
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000

  notify:
    image: bitnami/kafka:latest
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    networks:
      - bannercircle
    ports:
      - 9092:9092
    depends_on:
      - zookeeper

  migrations:
    image: service:dev
    command: /bin/sh -c "sleep 10 && /app/service migrate"
    networks:
      - bannercircle
    depends_on:
      db:
        condition: service_healthy

  app:
    image: service:dev
    command: /bin/sh -c "sleep 25 && /app/service start"
    networks:
      - bannercircle
    ports:
      - 8088:8088

networks:
  bannercircle:
    driver: bridge
